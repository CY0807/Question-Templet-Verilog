
// Despcription: This is a templet for doing verilog questions
// Author: Chris Chen
// Date: 2024-02-27
// Version: 1.0

`timescale 1ns / 1ps

module tb_Top();

parameter PERIOD = 20;
parameter REQ_WIDTH = 8;


/************************* 1. signals *************************/

// clock and reset
reg clk, rst_n;

// input and output signals
reg [REQ_WIDTH-1:0] req;
wire [REQ_WIDTH-1:0] gnt1, gnt2;

// simulation signals
reg is_finish;
integer i;


/************************ 2. simulation ***********************/

always #(PERIOD/2) clk = ~clk;

// work flow
initial begin
    $display("\n***** Simulation Begin *****\n");
    clk = 0;
    rst_n = 0;
    is_finish = 0;
    #100;
    rst_n = 1;
    
    wait(is_finish);
    #100;
    $display("\n***** Simulation Finish *****\n");
    $finish;
end

// init vars
initial begin
    req = 0;
end

// simulation logic
initial begin
    wait(rst_n);
    
    for(i=0; i<100; i=i+1) begin
        req = $random;
        #(PERIOD * REQ_WIDTH);
    end
       
    is_finish = 1;
end


/************************ 3. others ***************************/

initial begin  
    $dumpfile("wave.vcd"); 
    $dumpvars(0, tb_Top);
end

Arbiter_Round_robin1
#(
    .REQ_WIDTH(REQ_WIDTH)
)
Arbiter_Round_robin1_inst
(
    .clk     (clk  ),
    .rst_n   (rst_n),
    .req     (req  ),
    .gnt     (gnt1 )
);

Arbiter_Round_robin2
#(
    .REQ_WIDTH(REQ_WIDTH)
)
Arbiter_Round_robin2_inst
(
    .clk     (clk  ),
    .rst_n   (rst_n),
    .req     (req  ),
    .gnt     (gnt2 )
);

endmodule


