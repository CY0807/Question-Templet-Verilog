
// Despcription: This is a templet for doing verilog questions
// Author: Chris Chen
// Date: 2024-03-27
// Version: 1.0

`timescale 1ns / 1ps

module tb_Clk_Div();

parameter PERIOD = 20;
parameter DIV = 3;


/************************* 1. signals *************************/

// clock and reset
reg clk, rst_n;

// input and output signals
wire clk_in, clk_out;

// simulation signals
reg is_finish;
integer i;


/************************ 2. simulation ***********************/

always #(PERIOD/2) clk = ~clk;

// work flow
initial begin
  $display("\n***** Simulation Begin *****\n");
  clk = 1;
  rst_n = 0;
  #100;
  rst_n = 1;
    
  wait(is_finish);
  #100;
  $display("\n***** Simulation Finish *****\n");
  $finish;
end

// init vars
initial begin
  i = 0;
  is_finish = 0;
end

// time out
initial begin
  # (PERIOD * 50000 * 2) // 2ms @ 50MHz
  $display("\n***** Timeout Finish *****\n");
  $finish;
end

// simulation logic
initial begin
  wait(rst_n);
  # (PERIOD*100);

  is_finish = 1;  
end

assign clk_in = clk;


/************************ 3. others ***************************/

initial begin  
  $dumpfile("wave.vcd"); 
  $dumpvars(0, tb_Clk_Div);
end

Clk_Div
#( 
  .DIV(DIV)
)
Clk_Div_inst
(
  .clk_in   (clk_in   ),
  .rst_n    (rst_n    ),
  .clk_out  (clk_out  )
);

endmodule


